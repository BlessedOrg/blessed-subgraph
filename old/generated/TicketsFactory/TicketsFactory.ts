// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class NewTicketDeployed extends ethereum.Event {
  get params(): NewTicketDeployed__Params {
    return new NewTicketDeployed__Params(this);
  }
}

export class NewTicketDeployed__Params {
  _event: NewTicketDeployed;

  constructor(event: NewTicketDeployed) {
    this._event = event;
  }

  get ticketAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get ownerSmartWallet(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class TicketsFactory__deployTicketInputConfigStruct extends ethereum.Tuple {
  get _owner(): Address {
    return this[0].toAddress();
  }

  get _ownerSmartWallet(): Address {
    return this[1].toAddress();
  }

  get _eventAddress(): Address {
    return this[2].toAddress();
  }

  get _baseURI(): string {
    return this[3].toString();
  }

  get _name(): string {
    return this[4].toString();
  }

  get _symbol(): string {
    return this[5].toString();
  }

  get _erc20Address(): Address {
    return this[6].toAddress();
  }

  get _price(): BigInt {
    return this[7].toBigInt();
  }

  get _initialSupply(): BigInt {
    return this[8].toBigInt();
  }

  get _maxSupply(): BigInt {
    return this[9].toBigInt();
  }

  get _transferable(): boolean {
    return this[10].toBoolean();
  }

  get _whitelistOnly(): boolean {
    return this[11].toBoolean();
  }

  get _stakeholders(): Array<TicketsFactory__deployTicketInputConfig_stakeholdersStruct> {
    return this[12].toTupleArray<TicketsFactory__deployTicketInputConfig_stakeholdersStruct>();
  }
}

export class TicketsFactory__deployTicketInputConfig_stakeholdersStruct extends ethereum.Tuple {
  get wallet(): Address {
    return this[0].toAddress();
  }

  get feePercentage(): BigInt {
    return this[1].toBigInt();
  }
}

export class TicketsFactory extends ethereum.SmartContract {
  static bind(address: Address): TicketsFactory {
    return new TicketsFactory("TicketsFactory", address);
  }

  deployTicket(config: TicketsFactory__deployTicketInputConfigStruct): Address {
    let result = super.call(
      "deployTicket",
      "deployTicket((address,address,address,string,string,string,address,uint256,uint256,uint256,bool,bool,(address,uint256)[])):(address)",
      [ethereum.Value.fromTuple(config)],
    );

    return result[0].toAddress();
  }

  try_deployTicket(
    config: TicketsFactory__deployTicketInputConfigStruct,
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "deployTicket",
      "deployTicket((address,address,address,string,string,string,address,uint256,uint256,uint256,bool,bool,(address,uint256)[])):(address)",
      [ethereum.Value.fromTuple(config)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get initialOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class DeployTicketCall extends ethereum.Call {
  get inputs(): DeployTicketCall__Inputs {
    return new DeployTicketCall__Inputs(this);
  }

  get outputs(): DeployTicketCall__Outputs {
    return new DeployTicketCall__Outputs(this);
  }
}

export class DeployTicketCall__Inputs {
  _call: DeployTicketCall;

  constructor(call: DeployTicketCall) {
    this._call = call;
  }

  get config(): DeployTicketCallConfigStruct {
    return changetype<DeployTicketCallConfigStruct>(
      this._call.inputValues[0].value.toTuple(),
    );
  }
}

export class DeployTicketCall__Outputs {
  _call: DeployTicketCall;

  constructor(call: DeployTicketCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class DeployTicketCallConfigStruct extends ethereum.Tuple {
  get _owner(): Address {
    return this[0].toAddress();
  }

  get _ownerSmartWallet(): Address {
    return this[1].toAddress();
  }

  get _eventAddress(): Address {
    return this[2].toAddress();
  }

  get _baseURI(): string {
    return this[3].toString();
  }

  get _name(): string {
    return this[4].toString();
  }

  get _symbol(): string {
    return this[5].toString();
  }

  get _erc20Address(): Address {
    return this[6].toAddress();
  }

  get _price(): BigInt {
    return this[7].toBigInt();
  }

  get _initialSupply(): BigInt {
    return this[8].toBigInt();
  }

  get _maxSupply(): BigInt {
    return this[9].toBigInt();
  }

  get _transferable(): boolean {
    return this[10].toBoolean();
  }

  get _whitelistOnly(): boolean {
    return this[11].toBoolean();
  }

  get _stakeholders(): Array<DeployTicketCallConfig_stakeholdersStruct> {
    return this[12].toTupleArray<DeployTicketCallConfig_stakeholdersStruct>();
  }
}

export class DeployTicketCallConfig_stakeholdersStruct extends ethereum.Tuple {
  get wallet(): Address {
    return this[0].toAddress();
  }

  get feePercentage(): BigInt {
    return this[1].toBigInt();
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
